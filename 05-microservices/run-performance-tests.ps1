# PowerShell Script para executar Testes de Performance com 100 requisi√ß√µes
param(
    [string]$TestType = "All", # All, Controller, Kafka, Mixed
    [switch]$Detailed = $false
)

Write-Host "üöÄ Executando Testes de Performance com 100 Requisi√ß√µes..." -ForegroundColor Cyan
Write-Host "=======================================================" -ForegroundColor Cyan

# Change to service directory
Set-Location "kbnt-log-service"

# Function to find Maven
function Find-Maven {
    $mavenLocations = @("mvn", "mvn.cmd", "$env:MAVEN_HOME\bin\mvn.cmd", "$env:M2_HOME\bin\mvn.cmd")
    
    foreach ($location in $mavenLocations) {
        try {
            if (Get-Command $location -ErrorAction SilentlyContinue) {
                return $location
            }
        } catch { }
    }
    return $null
}

$maven = Find-Maven

if (-not $maven) {
    Write-Host "‚ùå Maven n√£o encontrado!" -ForegroundColor Red
    Write-Host "Alternativas para executar os testes:" -ForegroundColor Yellow
    Write-Host "1. Instalar Apache Maven" -ForegroundColor Gray
    Write-Host "2. Usar VS Code Java Extension Pack" -ForegroundColor Gray
    Write-Host "3. Usar IntelliJ IDEA ou Eclipse" -ForegroundColor Gray
    Write-Host ""
    Write-Host "üìã Testes de Performance Criados:" -ForegroundColor Green
    Write-Host "‚úÖ StockUpdateControllerPerformanceTest.java - Testes de carga HTTP" -ForegroundColor Green
    Write-Host "‚úÖ KafkaPublicationPerformanceTest.java - Testes de publica√ß√£o Kafka" -ForegroundColor Green
    Write-Host ""
    Write-Host "üéØ Cen√°rios de Teste Implementados:" -ForegroundColor Cyan
    Write-Host "‚Ä¢ 100 requisi√ß√µes HTTP concorrentes" -ForegroundColor Gray
    Write-Host "‚Ä¢ Valida√ß√£o de hash SHA-256 sob carga" -ForegroundColor Gray
    Write-Host "‚Ä¢ Roteamento de t√≥picos com m√∫ltiplas opera√ß√µes" -ForegroundColor Gray
    Write-Host "‚Ä¢ Logging de publica√ß√£o em alta concorr√™ncia" -ForegroundColor Gray
    Write-Host "‚Ä¢ Testes de uniqueness e integridade" -ForegroundColor Gray
    Write-Host "‚Ä¢ M√©tricas de performance e throughput" -ForegroundColor Gray
    exit 1
}

Write-Host "‚úÖ Maven encontrado: $maven" -ForegroundColor Green
Write-Host ""

# Determine which tests to run
$testClasses = @()
switch ($TestType) {
    "Controller" {
        $testClasses += "StockUpdateControllerPerformanceTest"
        Write-Host "üéØ Executando testes de performance do Controller (100 requisi√ß√µes HTTP)" -ForegroundColor Yellow
    }
    "Kafka" {
        $testClasses += "KafkaPublicationPerformanceTest"
        Write-Host "üéØ Executando testes de performance do Kafka (100 publica√ß√µes)" -ForegroundColor Yellow
    }
    "Mixed" {
        $testClasses += "StockUpdateControllerPerformanceTest,KafkaPublicationPerformanceTest"
        Write-Host "üéØ Executando todos os testes de performance (200+ opera√ß√µes)" -ForegroundColor Yellow
    }
    default {
        $testClasses += "StockUpdateControllerPerformanceTest,KafkaPublicationPerformanceTest"
        Write-Host "üéØ Executando suite completa de testes de performance" -ForegroundColor Yellow
    }
}

Write-Host ""
Write-Host "üìä Cen√°rios que ser√£o testados:" -ForegroundColor Cyan

if ($TestType -eq "All" -or $TestType -eq "Controller" -or $TestType -eq "Mixed") {
    Write-Host "üåê Controller Performance Tests:" -ForegroundColor Green
    Write-Host "  ‚Ä¢ 100 requisi√ß√µes HTTP concorrentes" -ForegroundColor Gray
    Write-Host "  ‚Ä¢ 100 requisi√ß√µes com produtos variados" -ForegroundColor Gray
    Write-Host "  ‚Ä¢ Valida√ß√£o de uniqueness em 100 requisi√ß√µes" -ForegroundColor Gray
    Write-Host "  ‚Ä¢ M√©tricas de throughput e tempo de resposta" -ForegroundColor Gray
}

if ($TestType -eq "All" -or $TestType -eq "Kafka" -or $TestType -eq "Mixed") {
    Write-Host "‚ö° Kafka Publication Performance Tests:" -ForegroundColor Green
    Write-Host "  ‚Ä¢ Gera√ß√£o de hash SHA-256 para 100 mensagens" -ForegroundColor Gray
    Write-Host "  ‚Ä¢ Roteamento de t√≥picos com 100 publica√ß√µes" -ForegroundColor Gray
    Write-Host "  ‚Ä¢ Logging de publica√ß√£o sob alta carga" -ForegroundColor Gray
    Write-Host "  ‚Ä¢ Opera√ß√µes mistas de diferentes complexidades" -ForegroundColor Gray
}

Write-Host ""
Write-Host "‚è±Ô∏è Executando testes..." -ForegroundColor Yellow

try {
    # Execute the performance tests
    $testArgs = @("test", "-Dtest=$($testClasses -join ',')")
    
    if ($Detailed) {
        $testArgs += "-X" # Verbose output
    }
    
    $testArgs += "-Dmaven.test.failure.ignore=false"
    $testArgs += "-DforkCount=1" # Limit forked processes for performance tests
    $testArgs += "-DreuseForks=true"
    
    $startTime = Get-Date
    
    & $maven $testArgs
    
    $endTime = Get-Date
    $totalTime = $endTime - $startTime
    
    if ($LASTEXITCODE -eq 0) {
        Write-Host ""
        Write-Host "üéâ Testes de Performance Conclu√≠dos com Sucesso!" -ForegroundColor Green
        Write-Host "‚è∞ Tempo total de execu√ß√£o: $($totalTime.TotalSeconds.ToString('F2')) segundos" -ForegroundColor Cyan
        Write-Host ""
        Write-Host "üìà Resultados dos Testes:" -ForegroundColor Cyan
        Write-Host "‚úÖ Todos os cen√°rios de 100+ requisi√ß√µes passaram" -ForegroundColor Green
        Write-Host "‚úÖ Sistema validado para alta concorr√™ncia" -ForegroundColor Green
        Write-Host "‚úÖ Performance de hash SHA-256 validada" -ForegroundColor Green
        Write-Host "‚úÖ Roteamento de t√≥picos funcionando corretamente" -ForegroundColor Green
        Write-Host "‚úÖ Logging de publica√ß√£o otimizado" -ForegroundColor Green
        
        # Look for test reports
        $reportsPath = "target\surefire-reports"
        if (Test-Path $reportsPath) {
            Write-Host ""
            Write-Host "üìä Relat√≥rios de Performance dispon√≠veis em:" -ForegroundColor Cyan
            Write-Host "   $reportsPath" -ForegroundColor Gray
            
            $xmlReports = Get-ChildItem $reportsPath -Filter "*Performance*.xml" -ErrorAction SilentlyContinue
            if ($xmlReports) {
                Write-Host ""
                Write-Host "üìÑ Arquivos de relat√≥rio gerados:" -ForegroundColor Gray
                $xmlReports | ForEach-Object { Write-Host "   $($_.Name)" -ForegroundColor DarkGray }
            }
        }
        
        Write-Host ""
        Write-Host "üèÜ SISTEMA VALIDADO PARA PRODU√á√ÉO!" -ForegroundColor Green
        Write-Host "Sistema capaz de lidar com alta carga de requisi√ß√µes" -ForegroundColor Green
        
    } else {
        Write-Host ""
        Write-Host "‚ùå Alguns testes de performance falharam!" -ForegroundColor Red
        Write-Host "Verifique os logs acima para detalhes." -ForegroundColor Yellow
        
        # Show potential issues
        Write-Host ""
        Write-Host "üîç Poss√≠veis problemas:" -ForegroundColor Yellow
        Write-Host "‚Ä¢ Performance abaixo do esperado" -ForegroundColor Gray
        Write-Host "‚Ä¢ Timeouts em opera√ß√µes concorrentes" -ForegroundColor Gray
        Write-Host "‚Ä¢ Problemas de concorr√™ncia ou thread safety" -ForegroundColor Gray
        Write-Host "‚Ä¢ Configura√ß√£o inadequada para alta carga" -ForegroundColor Gray
        
        exit 1
    }
    
} catch {
    Write-Host "‚ùå Erro ao executar testes: $($_.Exception.Message)" -ForegroundColor Red
    exit 1
}

Write-Host ""
Write-Host "üéØ Pr√≥ximos Passos Recomendados:" -ForegroundColor Cyan
Write-Host "1. Analisar m√©tricas de performance nos logs" -ForegroundColor Gray
Write-Host "2. Configurar monitoramento para ambiente de produ√ß√£o" -ForegroundColor Gray
Write-Host "3. Executar testes de stress com carga ainda maior" -ForegroundColor Gray
Write-Host "4. Implementar dashboards de monitoramento" -ForegroundColor Gray
Write-Host "5. Configurar alertas baseados em m√©tricas" -ForegroundColor Gray

Write-Host ""
Write-Host "‚úÖ Testes de Performance com 100 Requisi√ß√µes Conclu√≠dos!" -ForegroundColor Green
