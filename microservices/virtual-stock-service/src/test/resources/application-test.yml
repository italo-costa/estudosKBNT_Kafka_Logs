# Test Profile Configuration
spring:
  application:
    name: virtual-stock-service-test

  # H2 In-Memory Database for Tests
  datasource:
    url: jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
    driver-class-name: org.h2.Driver
    username: sa
    password: ""
  h2:
    console:
      enabled: true

  # JPA Configuration for Tests
  jpa:
    hibernate:
      ddl-auto: create-drop
    show-sql: true
    properties:
      hibernate:
        format_sql: true
    database-platform: org.hibernate.dialect.H2Dialect

  # Kafka Test Configuration
  kafka:
    bootstrap-servers: localhost:19092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
      acks: all
      retries: 3
    consumer:
      group-id: virtual-stock-test-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer

# Kafka Topics and Virtual Stock Configuration for Tests
virtual-stock:
  kafka:
    topic-name: virtual-stock-updates-test
    partitions: 1
    replication-factor: 1
  test:
    mock-kafka: true
    embedded-database: true
  cors:
    allowed-origins: http://localhost:3000,http://localhost:8080
    allowed-methods: GET,POST,PUT,DELETE,OPTIONS
    allowed-headers: "*"
    allow-credentials: true

# Actuator Configuration for Tests
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: always
      show-components: always

# Logging Configuration for Tests
logging:
  level:
    com.kbnt.virtualstock: DEBUG
    org.springframework.kafka: WARN
    org.apache.kafka: WARN
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE

# Circuit Breaker Configuration for Tests (if using Resilience4j)
resilience4j:
  circuitbreaker:
    instances:
      virtual-stock-service:
        failure-rate-threshold: 50
        wait-duration-in-open-state: 10s
        sliding-window-size: 10
