# =============================================================================
# HAPROXY LOAD BALANCER CONFIGURATION
# KBNT Kafka Logs - Escalabilidade Horizontal
# =============================================================================

global
    daemon
    maxconn 4096
    log stdout local0 info
    tune.ssl.default-dh-param 2048

defaults
    mode http
    timeout connect 5000ms
    timeout client 50000ms
    timeout server 50000ms
    option httplog
    option dontlognull
    option redispatch
    retries 3
    balance roundrobin

# =============================================================================
# FRONTEND CONFIGURATIONS
# =============================================================================

# API Gateway Load Balancer
frontend api_gateway_frontend
    bind *:8090
    default_backend api_gateway_backend
    option httplog
    capture request header Host len 32
    capture request header User-Agent len 64

# Virtual Stock Service Load Balancer
frontend virtual_stock_frontend
    bind *:8086
    default_backend virtual_stock_backend
    option httplog

# Log Producer Service Load Balancer
frontend log_producer_frontend
    bind *:8085
    default_backend log_producer_backend
    option httplog

# Log Consumer Service Load Balancer
frontend log_consumer_frontend
    bind *:8084
    default_backend log_consumer_backend
    option httplog

# Management/Actuator endpoints
frontend management_frontend
    bind *:8081
    default_backend management_backend
    option httplog

# =============================================================================
# BACKEND CONFIGURATIONS
# =============================================================================

# API Gateway Backend - 2 instances
backend api_gateway_backend
    balance roundrobin
    option httpchk GET /actuator/health
    server api-gateway-1 172.20.6.10:8080 check inter 30s rise 2 fall 3
    server api-gateway-2 172.20.6.11:8080 check inter 30s rise 2 fall 3

# Virtual Stock Service Backend - 3 instances with weighted distribution
backend virtual_stock_backend
    balance roundrobin
    option httpchk GET /actuator/health
    server virtual-stock-1 172.20.7.10:8080 check inter 30s rise 2 fall 3 weight 100
    server virtual-stock-2 172.20.7.11:8080 check inter 30s rise 2 fall 3 weight 100
    server virtual-stock-3 172.20.7.12:8080 check inter 30s rise 2 fall 3 weight 80

# Log Producer Service Backend - 2 instances
backend log_producer_backend
    balance roundrobin
    option httpchk GET /actuator/health
    server log-producer-1 172.20.8.10:8080 check inter 30s rise 2 fall 3
    server log-producer-2 172.20.8.11:8080 check inter 30s rise 2 fall 3

# Log Consumer Service Backend - 2 instances
backend log_consumer_backend
    balance roundrobin
    option httpchk GET /actuator/health
    server log-consumer-1 172.20.9.10:8080 check inter 30s rise 2 fall 3
    server log-consumer-2 172.20.9.11:8080 check inter 30s rise 2 fall 3

# Management Backend - All services management endpoints
backend management_backend
    balance roundrobin
    server api-gateway-1-mgmt 172.20.6.10:8081 check inter 60s
    server api-gateway-2-mgmt 172.20.6.11:8081 check inter 60s
    server virtual-stock-1-mgmt 172.20.7.10:8081 check inter 60s
    server virtual-stock-2-mgmt 172.20.7.11:8081 check inter 60s
    server virtual-stock-3-mgmt 172.20.7.12:8081 check inter 60s

# =============================================================================
# STATISTICS PAGE
# =============================================================================
frontend stats
    bind *:8404
    stats enable
    stats uri /stats
    stats refresh 30s
    stats admin if TRUE
    stats show-legends
    stats show-node
    stats auth admin:kbnt123
